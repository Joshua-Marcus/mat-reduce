{"version":3,"file":"mat-reduce.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","ng://mat-reduce/lib/dialogs/app-confirmation.component.ts","ng://mat-reduce/lib/services/form-builder-typed.service.ts","ng://mat-reduce/lib/utils/case-helper.ts","ng://mat-reduce/lib/controls/form-base-class.ts","ng://mat-reduce/lib/controls/using-3rd-party/form-color.component.ts","ng://mat-reduce/lib/utils/logger.ts","ng://mat-reduce/lib/controls/using-3rd-party/form-date.component.ts","ng://mat-reduce/lib/controls/using-3rd-party/form-time.component.ts","ng://mat-reduce/lib/controls/using-3rd-party/form-signature.component.ts","ng://mat-reduce/lib/controls/using-3rd-party/editor-modules/counter.ts","ng://mat-reduce/lib/controls/using-3rd-party/editor-modules/add-quill-inline-styles.ts","ng://mat-reduce/lib/controls/using-3rd-party/form-quill-editor.component.ts","ng://mat-reduce/lib/controls/using-3rd-party/forms-3rd-party.module.ts","ng://mat-reduce/lib/controls/material/form-select-object-multiple.component.ts","ng://mat-reduce/lib/controls/material/form-toggle.component.ts","ng://mat-reduce/lib/controls/material/form-text-clearable.component.ts","ng://mat-reduce/lib/controls/material/form-text-disabled.component.ts","ng://mat-reduce/lib/controls/material/form-text-icons.component.ts","ng://mat-reduce/lib/controls/material/form-text-password.component.ts","ng://mat-reduce/lib/controls/material/form-text.component.ts","ng://mat-reduce/lib/controls/material/form-textarea-disabled.component.ts","ng://mat-reduce/lib/controls/material/form-textarea.component.ts","ng://mat-reduce/lib/controls/material/form-toggle-reversed.component.ts","ng://mat-reduce/lib/controls/material/form-select-object.component.ts","ng://mat-reduce/lib/controls/material/form-select-string.component.ts","ng://mat-reduce/lib/controls/material/form-tag-multiple.component.ts","ng://mat-reduce/lib/controls/material/form-tag-single.component.ts","ng://mat-reduce/lib/controls/material/form-number.component.ts","ng://mat-reduce/lib/controls/material/form-select-string-multiple.component.ts","ng://mat-reduce/lib/controls/material/forms-material.module.ts","ng://mat-reduce/lib/controls/composed/form-assignee.models.ts","ng://mat-reduce/lib/controls/composed/contact-helper.ts","ng://mat-reduce/lib/controls/composed/form-assignee-selector.component.ts","ng://mat-reduce/lib/controls/composed/forms-composed.module.ts","ng://mat-reduce/lib/mat-reduce.module.ts","ng://mat-reduce/lib/controls/material/Tag.ts","ng://mat-reduce/lib/controls/material/TagObject.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\r\n  Component,\r\n  Inject,\r\n  Injectable,\r\n  OnInit,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatButton,\r\n  MatDialog,\r\n  MatDialogRef\r\n} from '@angular/material';\r\nimport { take } from 'rxjs/operators';\r\n\r\ninterface ConfirmationDialogData {\r\n  message: string;\r\n  okIcon?: string;\r\n  okLabel?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-confirmation-dialog',\r\n  template: `\r\n    <p class=\"title is-centered\">Confirm</p>\r\n    <p class=\"subtitle is-centered\">{{ message }}</p>\r\n    <form (submit)=\"onSubmitOk()\" class=\"buttons\">\r\n      <button #okButton mat-raised-button color=\"primary\" type=\"submit\">\r\n        <mat-icon>{{ okIcon }}</mat-icon>\r\n        <span>{{ okLabel }}</span>\r\n      </button>\r\n      <button mat-raised-button color=\"white\" (click)=\"onClickCancel($event)\">\r\n        <mat-icon>cancel</mat-icon>\r\n        <span>Cancel</span>\r\n      </button>\r\n    </form>\r\n  `,\r\n  styles: [\r\n    `\r\n      .title {\r\n        font-size: 1.8em;\r\n        margin: 0px;\r\n      }\r\n      .subtitle {\r\n        color: grey;\r\n        margin: 0px;\r\n        font-size: 1.4em;\r\n      }\r\n      .buttons {\r\n        display: flex;\r\n        justify-content: center;\r\n        margin-top: 10px;\r\n      }\r\n      button {\r\n        margin-left: 10px;\r\n        margin-right: 10px;\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class AppConfirmationDialogComponent implements OnInit {\r\n  @ViewChild('okButton', {} as any) okButton: MatButton;\r\n\r\n  message: string;\r\n  okIcon: string;\r\n  okLabel: string;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AppConfirmationDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: ConfirmationDialogData\r\n  ) {\r\n    this.message = data.message;\r\n    this.okIcon = data.okIcon ? data.okIcon : 'done';\r\n    this.okLabel = data.okLabel ? data.okLabel : 'Ok';\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.okButton && this.okButton.focus) {\r\n      this.okButton.focus();\r\n    }\r\n  }\r\n\r\n  onClickCancel(e): void {\r\n    e.preventDefault();\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n  onSubmitOk(): void {\r\n    this.dialogRef.close(true);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class ConfirmationService {\r\n  constructor(private dialog: MatDialog) {}\r\n\r\n  async AskConfirm(\r\n    confirmationMessage: string,\r\n    okLabel?: string,\r\n    okIcon?: string\r\n  ): Promise<boolean> {\r\n    const data = {\r\n      message: confirmationMessage,\r\n      okIcon: okIcon,\r\n      okLabel: okLabel\r\n    } as ConfirmationDialogData;\r\n    const dialogRef = this.dialog.open(AppConfirmationDialogComponent, {\r\n      width: '300px',\r\n      hasBackdrop: true,\r\n      disableClose: false,\r\n      data: data\r\n    });\r\n\r\n    const result: boolean = await dialogRef\r\n      .afterClosed()\r\n      .pipe(take(1))\r\n      .toPromise();\r\n    console.log(`Confirmation-Service: AskConfirm=${!!result}`);\r\n    return result;\r\n  }\r\n}\r\n","import {\r\n  AbstractControl,\r\n  FormArray,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  ValidatorFn,\r\n  AbstractControlOptions,\r\n  AsyncValidatorFn\r\n} from '@angular/forms';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport class FormControlWithLabel extends FormControl {\r\n  constructor(value: any, validators: any, public label: string) {\r\n    super(value, validators);\r\n  }\r\n}\r\n\r\nexport class FormArrayWithLabel extends FormArray {\r\n  constructor(value: any, validators: any, public label: string) {\r\n    super(value, validators);\r\n  }\r\n}\r\n\r\nexport type FormGroupControlsOf<T> = {\r\n  [P in keyof T]: FormControl | FormGroup | FormArray | FormControlWithLabel\r\n};\r\n\r\nexport abstract class FormGroupTypeSafe<T> extends FormGroup {\r\n  // give the value a custom type s\r\n  value: T;\r\n  label: string;\r\n  setValue(newValue: T) {\r\n    super.setValue(newValue);\r\n  }\r\n\r\n  // create helper methods to achieve this syntax eg: this.form.getSafe(x => x.heroName).patchValue('Himan')\r\n  public abstract getSafe(\r\n    propertyFunction: (typeVal: T) => any\r\n  ): AbstractControl;\r\n  public abstract setControlSafe(\r\n    propertyFunction: (typeVal: T) => any,\r\n    control: AbstractControl\r\n  ): void;\r\n  // If you need more function implement declare them here but implement them on FormBuilderTypedService.group instantiation.\r\n}\r\n\r\nexport abstract class FormArrayTypeSafe<T> extends FormArray {\r\n  value: T[];\r\n  at(index: number): FormControlTypeSafe<T> | FormGroupTypeSafe<T> {\r\n    return super.at(index) as any;\r\n  }\r\n}\r\n\r\nexport abstract class FormControlTypeSafe<T> extends FormControl {\r\n  value: T;\r\n  valueChanges: Observable<T>;\r\n  setValue(newValue: T) {\r\n    super.setValue(newValue);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class FormBuilderTypedService extends FormBuilder {\r\n  control<T>(\r\n    formState?: any,\r\n    validatorOrOpts?:\r\n      | ValidatorFn\r\n      | ValidatorFn[]\r\n      | AbstractControlOptions\r\n      | null,\r\n    asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[] | null\r\n  ): FormControlTypeSafe<T> {\r\n    const control = super.control(\r\n      formState,\r\n      validatorOrOpts,\r\n      asyncValidator\r\n    ) as FormControlTypeSafe<T>;\r\n    return control;\r\n  }\r\n  array<T>(\r\n    controlsConfig:\r\n      | FormGroupControlsOf<T>[]\r\n      | FormGroupTypeSafe<T>[]\r\n      | FormControlTypeSafe<T>[],\r\n    extra?: {\r\n      [key: string]: any;\r\n    } | null\r\n  ): FormArrayTypeSafe<T> {\r\n    const arr = super.array(controlsConfig, extra) as FormArrayTypeSafe<T>;\r\n\r\n    return arr;\r\n  }\r\n  // override group to be type safe\r\n  group<T>(\r\n    controlsConfig: FormGroupControlsOf<T>,\r\n    extra?: {\r\n      [key: string]: any;\r\n    } | null\r\n  ): FormGroupTypeSafe<T> {\r\n    /*NOTE the return FormGroupTypeSafe<T> */\r\n\r\n    // instantiate group from angular type\r\n    const gr = super.group(controlsConfig, extra) as FormGroupTypeSafe<T>;\r\n    if (extra) {\r\n      gr.label = extra['label'];\r\n    }\r\n\r\n    const getPropertyName = (propertyFunction: Function): string => {\r\n      //  https://github.com/dsherret/ts-nameof - helped me with the code below, THANX!!!!\r\n      // propertyFunction.toString() sample value:\r\n      //   function(x) { return x.hero.address.postcode;}\r\n      // we need the 'hero.address.postcode'\r\n      // for gr.get('hero.address.postcode') function\r\n      const properties = propertyFunction\r\n        .toString()\r\n        .split('.')\r\n        .splice(1);\r\n\r\n      const r = properties.join('.');\r\n      return r;\r\n    };\r\n\r\n    if (gr) {\r\n      // implement getSafe method\r\n      gr.getSafe = (propertyFunction: (typeVal: T) => any): AbstractControl => {\r\n        const getStr = getPropertyName(propertyFunction);\r\n        // console.log(getStr);\r\n        const p = gr.get(getStr) as FormGroupTypeSafe<T>;\r\n        return p;\r\n      };\r\n\r\n      // implement setControlSafe\r\n      gr.setControlSafe = (\r\n        propertyFunction: (typeVal: T) => any,\r\n        control: AbstractControl\r\n      ): void => {\r\n        const getStr = getPropertyName(propertyFunction);\r\n        // console.log(getStr);\r\n        gr.setControl(getStr, control);\r\n      };\r\n    }\r\n\r\n    return gr;\r\n  }\r\n}\r\n","export function ConvertToTitleCase(input: string): string {\r\n  const capitalsWithSpaces = input.replace(/([A-Z])/g, ' $1').trim();\r\n  const underscoresToSpaces = capitalsWithSpaces.replace(/_/g, ' ');\r\n  return underscoresToSpaces\r\n    .split(' ')\r\n    .map(p => p.charAt(0).toUpperCase() + p.substr(1).toLowerCase())\r\n    .join(' ');\r\n}\r\n","import { ControlValueAccessor, FormControl, Validator, ValidatorFn, Validators } from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { takeUntil, auditTime } from 'rxjs/operators';\r\nimport { ConvertToTitleCase } from '../utils/case-helper';\r\nimport {v4 as uuidv4 } from 'uuid';\r\n\r\nexport class FormBase<T>\r\n  implements OnInit, OnDestroy, ControlValueAccessor, Validator {\r\n  internalControl: FormControl = new FormControl();\r\n  autoCompleteObscureName: string;\r\n  _destroyed = new Subject();\r\n\r\n  disabled = false;\r\n  validationError: string;\r\n  _validators: ValidatorFn;\r\n\r\n  _value: T;\r\n\r\n  @Input()\r\n  appearance: 'outline' | 'fill' | 'standard';\r\n  @Input()\r\n  allowAutoComplete: boolean;\r\n  @Input()\r\n  formControlName: string;\r\n  @Input()\r\n  placeholder: string;\r\n  @Input()\r\n  debug = false;\r\n\r\n  constructor() {\r\n    // Garrentee that init and destroy are called\r\n    // even if ngOnInit() or ngOnDestroy() are overriden\r\n    const originalOnDestroy = this.ngOnDestroy;\r\n    this.ngOnDestroy = () => {\r\n      this.destroy();\r\n      originalOnDestroy.apply(this);\r\n    };\r\n    const originalOnInit = this.ngOnInit;\r\n    this.ngOnInit = () => {\r\n      this.init();\r\n      originalOnInit.apply(this);\r\n    };\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  ngOnDestroy() {}\r\n\r\n  init() {\r\n    this._destroyed.next();\r\n    if (!this.allowAutoComplete) {\r\n      this.autoCompleteObscureName = uuidv4();\r\n    }\r\n    this.internalControl.valueChanges\r\n      .pipe(takeUntil(this._destroyed))\r\n      .pipe(auditTime(100))\r\n      .subscribe(() => {\r\n        this._value = this.internalControl.value;\r\n        this.onChange(this._value);\r\n        this.onTouched();\r\n        // console.log('form-base-class: valueChanges', {val: this._value});\r\n      });\r\n\r\n    if (!this.placeholder) {\r\n      const nameParsed = ConvertToTitleCase(this.formControlName + '');\r\n      this.placeholder = nameParsed;\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this._destroyed.next();\r\n  }\r\n\r\n  get value() {\r\n    return this._value;\r\n  }\r\n\r\n  set value(val) {\r\n    this._value = val;\r\n    this.internalControl.setValue(val);\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    this.value = value;\r\n  }\r\n\r\n  propagateOnChange: any = () => {};\r\n  registerOnChange(fn: any): void {\r\n    this.propagateOnChange = fn;\r\n  }\r\n\r\n  onTouched: any = () => {};\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n    setTimeout(() => {\r\n      if (isDisabled) {\r\n        this.internalControl.disable();\r\n      } else {\r\n        this.internalControl.enable();\r\n      }\r\n    });\r\n  }\r\n\r\n  public validate(c: FormControl) {\r\n    const errors = c.errors;\r\n    const value = c.value;\r\n    // console.log('form-base-class: validate()', { errors, value });\r\n    this.internalControl.setValidators(c.validator);\r\n    return !this.validationError\r\n      ? null\r\n      : {\r\n          validationError: {\r\n            valid: false\r\n          }\r\n        };\r\n  }\r\n\r\n  private onChange(inputValue) {\r\n    this.validationError = this.CheckValueIsValid();\r\n    if (this.validationError) {\r\n      this.propagateOnChange(this.value);\r\n    } else {\r\n      this.propagateOnChange(inputValue);\r\n    }\r\n  }\r\n\r\n  CheckValueIsValid(): string {\r\n    return null;\r\n  }\r\n}\r\n","import { Component, forwardRef, Input, OnInit } from '@angular/core';\r\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { FormBase } from '../form-base-class';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'form-color',\r\n  template: `\r\n    <mat-form-field [appearance]=\"appearance\" class=\"full-width m-top\">\r\n      <span [class.txt-grey]=\"disabled\">\r\n        {{ placeholder }}\r\n      </span>\r\n      <input\r\n        matInput\r\n        [hidden]=\"true\"\r\n        [formControl]=\"internalControl\"\r\n        [name]=\"autoCompleteObscureName\"\r\n        autocomplete=\"dontcompleteme\"\r\n      />\r\n      <mat-card\r\n        *ngIf=\"!disabled\"\r\n        [cpOutputFormat]=\"'hex'\"\r\n        class=\"box has-pointer\"\r\n        [style.background]=\"value\"\r\n        [(colorPicker)]=\"value\"\r\n        [cpPosition]=\"'top'\"\r\n      >\r\n        <div class=\"flex-space-between\">\r\n          <span>\r\n            {{ value ? value : 'click to pick color' }}\r\n          </span>\r\n          <button\r\n            mat-mini-fab\r\n            (click)=\"onClickClear($event)\"\r\n            [disabled]=\"disabled\"\r\n            matTooltip=\"Clear current color\"\r\n            class=\"bg-white close-btn\"\r\n          >\r\n            <mat-icon class=\"txt-black\">\r\n              clear\r\n            </mat-icon>\r\n          </button>\r\n        </div>\r\n      </mat-card>\r\n      <mat-card\r\n        *ngIf=\"disabled\"\r\n        class=\"box\"\r\n        [style.background]=\"value\"\r\n      >\r\n        <div class=\"flex-space-between\">\r\n          <span>\r\n            {{ value ? value : 'click to pick color' }}\r\n          </span>\r\n          <span>\r\n          </span>\r\n        </div>\r\n      </mat-card>\r\n    </mat-form-field>\r\n  `,\r\n  styles: [\r\n    `\r\n      .close-btn {\r\n        position: absolute;\r\n        right: -4px;\r\n        top: -4px;\r\n        transform: scale(0.6);\r\n      }\r\n      .m-top {\r\n        margin-top: -20px;\r\n      }\r\n      .bg-white {\r\n        background-color: white !important;\r\n      }\r\n      .txt-black {\r\n        color: black;\r\n      }\r\n      .txt-grey {\r\n        color: grey;\r\n      }\r\n      .full-width {\r\n        width: 100%;\r\n      }\r\n      .box {\r\n        max-width: 200px;\r\n      }\r\n      .has-pointer {\r\n        cursor: pointer;\r\n      }\r\n      .flex-space-between {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n      }\r\n    `\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => LibFormColorComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => LibFormColorComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class LibFormColorComponent extends FormBase<string> implements OnInit {\r\n  @Input()\r\n  defaultColor = '#42d742';\r\n\r\n  ngOnInit() {\r\n    if (!this.value) {\r\n      setTimeout(() => {\r\n        this.value = this.defaultColor;\r\n      });\r\n    }\r\n  }\r\n\r\n  onClickClear(e: Event) {\r\n    e.stopPropagation();\r\n    this.value = '';\r\n  }\r\n}\r\n","export class SimpleLog {\n  constructor(private debug: boolean) {}\n\n  public get log() {\n    if (!this.debug) {\n      return (...any) => {};\n    }\n    const boundLogFn: (...any) => void = console.log.bind(\n      console,\n      'mat-reduce:: '\n    );\n    return boundLogFn;\n  }\n\n  public get warn() {\n    if (!this.debug) {\n      return (...any) => {};\n    }\n    const boundLogFn: (...any) => void = console.warn.bind(\n      console,\n      'mat-reduce:: '\n    );\n    return boundLogFn;\n  }\n}\n","import { Component, forwardRef, Input, OnInit } from '@angular/core';\r\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { FormBase } from '../form-base-class';\r\nimport { SimpleLog } from '../../utils/logger';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'form-date',\r\n  template: `\r\n    <mat-form-field [appearance]=\"appearance\" class=\"full-width\">\r\n      <input\r\n        matInput\r\n        (focus)=\"picker.open()\"\r\n        [min]=\"minDate\"\r\n        [matDatepicker]=\"picker\"\r\n        [disabled]=\"disabled\"\r\n        [placeholder]=\"placeholder\"\r\n        [(ngModel)]=\"value\"\r\n        [name]=\"autoCompleteObscureName\"\r\n        autocomplete=\"dontcompleteme\"\r\n      />\r\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n      <mat-datepicker #picker></mat-datepicker>\r\n    </mat-form-field>\r\n  `,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => LibFormDateComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => LibFormDateComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class LibFormDateComponent extends FormBase<Date> implements OnInit {\r\n  @Input()\r\n  placeholder = '';\r\n  @Input()\r\n  isAfterToday: boolean;\r\n  @Input()\r\n  AfterDate: Date;\r\n\r\n  logger: SimpleLog;\r\n\r\n  ngOnInit() {\r\n    this.logger = new SimpleLog(this.debug);\r\n  }\r\n\r\n  get minDate() {\r\n    if (this.AfterDate) {\r\n      return this.AfterDate;\r\n    }\r\n    if (this.isAfterToday) {\r\n      return new Date();\r\n    }\r\n    return null;\r\n  }\r\n\r\n  CheckValueIsValid(): string {\r\n    const formValue = this.value;\r\n    let formDate = formValue;\r\n    if (typeof formValue === 'string' || !formValue) {\r\n      formDate = new Date(formValue);\r\n    }\r\n    this.logger.log('form-date: CheckValueIsValid()', {\r\n      formValue,\r\n      formDate,\r\n      isAfterToday: this.isAfterToday,\r\n      isAfterDate: this.AfterDate\r\n    });\r\n    if (this.isAfterToday) {\r\n      const todaysDate = new Date();\r\n      const isAfterToday = this.isNewDateAfterThis(formDate, todaysDate);\r\n      if (!isAfterToday) {\r\n        return 'Date must be after today\\'s date';\r\n      }\r\n    }\r\n    if (this.AfterDate) {\r\n      const isAfterDate = this.isNewDateAfterThis(formDate, this.AfterDate);\r\n      if (!isAfterDate) {\r\n        return 'Date must be after date: ' + this.AfterDate.toDateString();\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private isNewDateAfterThis(formDate: Date, afterDate: Date) {\r\n    this.logger.log('form-date: isNewDateAfterThis()', {\r\n      formDate,\r\n      afterDate\r\n    });\r\n    if (!formDate || typeof formDate.getTime !== 'function') {\r\n      console.error('the form control value is not a valid Date', { formDate });\r\n      throw new Error();\r\n    }\r\n    if (!afterDate || typeof afterDate.getTime !== 'function') {\r\n      console.error('AfterDate is not a valid Date', { afterDate });\r\n      throw new Error();\r\n    }\r\n    const afterSeconds = afterDate.getTime();\r\n    const formSeconds = formDate.getTime();\r\n    const isAfter = afterSeconds < formSeconds;\r\n    this.logger.log('form-date: isNewDateAfterThis()', {\r\n      afterSeconds,\r\n      formSeconds,\r\n      isAfter\r\n    });\r\n    return isAfter;\r\n  }\r\n}\r\n","import { Component, forwardRef, Input, OnInit } from '@angular/core';\r\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { FormBase } from '../form-base-class';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'form-time',\r\n  template: `\r\n    <mat-form-field [appearance]=\"appearance\" class=\"full-width\">\r\n      <input\r\n        matInput\r\n        [formControl]=\"internalControl\"\r\n        [ngxTimepicker]=\"picker\"\r\n        [placeholder]=\"placeholder\"\r\n        [format]=\"format\"\r\n        [min]=\"min\"\r\n        [max]=\"max\"\r\n        [name]=\"autoCompleteObscureName\"\r\n        autocomplete=\"false\"\r\n      />\r\n      <mat-icon\r\n        matSuffix\r\n        class=\"has-pointer\"\r\n        [class.is-grey]=\"disabled\"\r\n        (click)=\"picker.open()\"\r\n      >\r\n        access_time\r\n      </mat-icon>\r\n      <ngx-material-timepicker\r\n        #picker\r\n        [defaultTime]=\"defaultTime\"\r\n        [minutesGap]=\"minutesGap\"\r\n        ESC=\"true\"\r\n      ></ngx-material-timepicker>\r\n    </mat-form-field>\r\n  `,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => LibFormTimeComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => LibFormTimeComponent),\r\n      multi: true\r\n    }\r\n  ],\r\n  styles: [\r\n    `\r\n      .is-grey {\r\n        color: #aaa;\r\n      }\r\n      .has-pointer {\r\n        cursor: pointer;\r\n      }\r\n      .full-width {\r\n        width: 100%;\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class LibFormTimeComponent extends FormBase<string> implements OnInit {\r\n  @Input()\r\n  placeholder = '';\r\n  @Input()\r\n  format: number; // 12 or 24\r\n  @Input()\r\n  min: string; // 12:00 AM\r\n  @Input()\r\n  max: string; // 12:00 AM\r\n  @Input()\r\n  defaultTime: string; // 12:00 AM\r\n  @Input()\r\n  minutesGap: number; // 1 -> 60\r\n  @Input()\r\n  required: boolean;\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  OnInit,\r\n  ViewChild,\r\n  forwardRef\r\n} from '@angular/core';\r\nimport { SignaturePad } from 'angular2-signaturepad/signature-pad';\r\nimport { FormBase } from '../form-base-class';\r\n\r\nimport { v1 as uuidv1 } from 'uuid';\r\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'form-signature',\r\n  template: `\r\n    <h3>{{ placeholder }}</h3>\r\n    <div #container class=\"signature-container\">\r\n      <div class=\"signature-border\" [class.disabled-border]=\"disabled\">\r\n        <signature-pad\r\n          #signaturePad\r\n          [hidden]=\"disabled\"\r\n          [options]=\"signaturePadOptions\"\r\n          (onEndEvent)=\"drawComplete(signaturePad)\"\r\n        ></signature-pad>\r\n        <img [hidden]=\"!disabled\" [src]=\"this.value || blankImageSrc\" />\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n      h3 {\r\n        display: inline-block;\r\n        margin-bottom: 0;\r\n      }\r\n      .signature-container {\r\n        display: inline-block;\r\n        width: 100%;\r\n      }\r\n      .signature-border {\r\n        display: inline-block;\r\n        border: 1px #777 solid;\r\n        margin: 20px;\r\n        height: 200px;\r\n      }\r\n      .disabled-border {\r\n        border: 2px #aaa dotted;\r\n      }\r\n      img {\r\n        height: 100%;\r\n      }\r\n    `\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => LibFormSignatureComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => LibFormSignatureComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class LibFormSignatureComponent extends FormBase<string>\r\n  implements OnInit, AfterViewInit {\r\n  @Input()\r\n  placeholder = 'Sign Here';\r\n\r\n  blankImageSrc = 'https://i.imgur.com/4StmpUT.png';\r\n\r\n  signaturePadOptions = {\r\n    minWidth: 2,\r\n    canvasWidth: 400,\r\n    canvasHeight: 200\r\n  };\r\n  @ViewChild('signaturePad', { static: false } as any)\r\n  signaturePad: ElementRef<SignaturePad>;\r\n  @ViewChild('container') container: ElementRef<HTMLDivElement>;\r\n\r\n  ngOnInit() {\r\n    this.autoCompleteObscureName = uuidv1();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.updateWidthToParent();\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    this.value = value;\r\n    this.setSignatureToPad();\r\n  }\r\n\r\n  updateWidthToParent() {\r\n    const pad = this.signaturePad.nativeElement;\r\n    if (!pad) {\r\n      return;\r\n    }\r\n    const containerWidth = this.container.nativeElement.clientWidth;\r\n    if (containerWidth < 600) {\r\n      const marginLeftAndRight = 20 * 2;\r\n      pad.set(\r\n        'canvasWidth',\r\n        containerWidth - marginLeftAndRight - 10\r\n      );\r\n    }\r\n  }\r\n\r\n  setSignatureToPad() {\r\n    // Set current signature from control\r\n    const currentSignature = this.value;\r\n    if (!this.signaturePad || !currentSignature) {\r\n      return;\r\n    }\r\n    const pad = this.signaturePad.nativeElement;\r\n    pad.fromDataURL(currentSignature);\r\n  }\r\n\r\n  drawComplete(e) {\r\n    if (!e) {\r\n      return;\r\n    }\r\n    const imgData = e.toDataURL();\r\n    this.value = imgData;\r\n  }\r\n}\r\n","import 'quill';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nexport interface QuillCounterConfig {\r\n  container: string;\r\n  units: 'words' | 'chars' | 'kb';\r\n}\r\n\r\nexport interface QuillInstance {\r\n  on: any;\r\n  getText: any;\r\n  root: any;\r\n}\r\n\r\nexport default class Counter {\r\n  quill: QuillInstance;\r\n  options: QuillCounterConfig;\r\n  updateTrigger = new Subject();\r\n\r\n  constructor(quill, options) {\r\n    this.quill = quill;\r\n    this.options = options;\r\n\r\n    const container = document.querySelector(this.options.container);\r\n\r\n    this.quill.on('text-change', () => {\r\n      this.updateTrigger.next();\r\n    });\r\n\r\n    this.updateTrigger.pipe(debounceTime(2000)).subscribe(() => {\r\n      const length = this.calculate();\r\n      container.innerHTML = length + ' ' + this.options.units;\r\n      // console.log('form-html-editor: updating counter =' + container.innerHTML);\r\n    });\r\n  }\r\n\r\n  calculate() {\r\n    const text = this.quill.getText().trim();\r\n\r\n    if (this.options.units === 'words') {\r\n      return !text ? 0 : text.split(/\\s+/).length;\r\n    }\r\n    if (this.options.units === 'kb') {\r\n      const html = this.quill.root.innerHTML;\r\n      return Math.round(html.length / 1024);\r\n    }\r\n    return text.length;\r\n  }\r\n}\r\n","export function AddQuillInlineStyles(Quill: any) {\r\n  // configure Quill to use inline styles so the email's format properly\r\n  const DirectionAttribute = Quill.import('attributors/attribute/direction');\r\n  Quill.register(DirectionAttribute, true);\r\n\r\n  const AlignClass = Quill.import('attributors/class/align');\r\n  Quill.register(AlignClass, true);\r\n\r\n  const BackgroundClass = Quill.import('attributors/class/background');\r\n  Quill.register(BackgroundClass, true);\r\n\r\n  const ColorClass = Quill.import('attributors/class/color');\r\n  Quill.register(ColorClass, true);\r\n\r\n  const DirectionClass = Quill.import('attributors/class/direction');\r\n  Quill.register(DirectionClass, true);\r\n\r\n  const FontClass = Quill.import('attributors/class/font');\r\n  Quill.register(FontClass, true);\r\n\r\n  const SizeClass = Quill.import('attributors/class/size');\r\n  Quill.register(SizeClass, true);\r\n\r\n  const AlignStyle = Quill.import('attributors/style/align');\r\n  Quill.register(AlignStyle, true);\r\n\r\n  const BackgroundStyle = Quill.import('attributors/style/background');\r\n  Quill.register(BackgroundStyle, true);\r\n\r\n  const ColorStyle = Quill.import('attributors/style/color');\r\n  Quill.register(ColorStyle, true);\r\n\r\n  const DirectionStyle = Quill.import('attributors/style/direction');\r\n  Quill.register(DirectionStyle, true);\r\n\r\n  const FontStyle = Quill.import('attributors/style/font');\r\n  Quill.register(FontStyle, true);\r\n\r\n  const SizeStyle = Quill.import('attributors/style/size');\r\n  Quill.register(SizeStyle, true);\r\n  // create new Quill instance after...\r\n\r\n  const BaseImageFormat = Quill.import('formats/image');\r\n  const ImageFormatAttributesList = ['alt', 'height', 'width', 'style'];\r\n\r\n  class ImageFormat extends BaseImageFormat {\r\n    static formats(domNode) {\r\n      return ImageFormatAttributesList.reduce((formats, attribute) => {\r\n        if (domNode.hasAttribute(attribute)) {\r\n          formats[attribute] = domNode.getAttribute(attribute);\r\n        }\r\n        return formats;\r\n      }, {});\r\n    }\r\n    format(name, value) {\r\n      if (ImageFormatAttributesList.indexOf(name) > -1) {\r\n        if (value) {\r\n          this.domNode.setAttribute(name, value);\r\n        } else {\r\n          this.domNode.removeAttribute(name);\r\n        }\r\n      } else {\r\n        super.format(name, value);\r\n      }\r\n    }\r\n  }\r\n\r\n  Quill.register(ImageFormat, true);\r\n}\r\n","import {\r\n  Component,\r\n  forwardRef,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { FormBase } from '../form-base-class';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, takeUntil, distinctUntilChanged } from 'rxjs/operators';\r\n\r\nimport * as QuillNamespace from 'quill';\r\nconst Quill: any = QuillNamespace;\r\nimport Counter, { QuillCounterConfig } from './editor-modules/counter';\r\n\r\nimport { ImageDrop } from 'quill-image-drop-module';\r\nimport ImageCompress from 'quill-image-compress';\r\nimport ImageResize from 'quill-image-resize-module';\r\nimport { htmlEditButton } from 'quill-html-edit-button';\r\nimport { AddQuillInlineStyles } from './editor-modules/add-quill-inline-styles';\r\nimport { SimpleLog } from '../../utils/logger';\r\n\r\nAddQuillInlineStyles(Quill);\r\n\r\nQuill.register('modules/htmlEditButton', htmlEditButton);\r\nQuill.register('modules/counter', Counter);\r\nQuill.register('modules/counterChars', Counter);\r\nQuill.register('modules/counterKiloBytes', Counter);\r\nQuill.register('modules/imageDrop', ImageDrop);\r\nQuill.register('modules/imageCompress', ImageCompress);\r\nQuill.register('modules/imageResize', ImageResize);\r\n\r\ntype conf = QuillCounterConfig;\r\n\r\n@Component({\r\n  selector: 'form-quill-editor',\r\n  template: `\r\n    <div [class.editor-disabled]=\"disabled\">\r\n      <quill-editor\r\n        (onContentChanged)=\"onContentChanged.next($event)\"\r\n        [ngModel]=\"value\"\r\n        [modules]=\"quillModulesUsed\"\r\n        [disabled]=\"disabled\"\r\n        [placeholder]=\"placeholder\"\r\n      >\r\n        <div quill-editor-toolbar>\r\n          <span class=\"ql-formats\">\r\n            <select class=\"ql-font\">\r\n              <option selected></option>\r\n              <option value=\"serif\"></option>\r\n              <option value=\"monospace\"></option>\r\n            </select>\r\n            <select class=\"ql-header\">\r\n              <option value=\"1\"></option>\r\n              <option value=\"2\"></option>\r\n              <option value=\"3\"></option>\r\n              <option value=\"4\"></option>\r\n              <option value=\"5\"></option>\r\n              <option value=\"6\"></option>\r\n              <option selected></option>\r\n            </select>\r\n          </span>\r\n          <span class=\"ql-formats\">\r\n            <button class=\"ql-bold\"></button>\r\n            <button class=\"ql-italic\"></button>\r\n            <button class=\"ql-underline\"></button>\r\n            <button class=\"ql-strike\"></button>\r\n          </span>\r\n          <span class=\"ql-formats\">\r\n            <select class=\"ql-color\"></select>\r\n            <select class=\"ql-background\"></select>\r\n          </span>\r\n          <span class=\"ql-formats\">\r\n            <button class=\"ql-list\" value=\"ordered\"></button>\r\n            <button class=\"ql-list\" value=\"bullet\"></button>\r\n            <select class=\"ql-align\">\r\n              <option selected></option>\r\n              <option value=\"center\"></option>\r\n              <option value=\"right\"></option>\r\n              <option value=\"justify\"></option>\r\n            </select>\r\n          </span>\r\n          <span class=\"ql-formats\">\r\n            <button class=\"ql-link\"></button>\r\n            <button class=\"ql-image\"></button>\r\n          </span>\r\n          <span class=\"ql-formats font12px\">\r\n            <div id=\"counter\"></div>\r\n          </span>\r\n          <span class=\"ql-formats font12px\">\r\n            <div id=\"counterChars\"></div>\r\n          </span>\r\n          <span class=\"ql-formats font12px\">\r\n            <div id=\"counterKiloBytes\"></div>\r\n          </span>\r\n        </div>\r\n      </quill-editor>\r\n    </div>\r\n  `,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => LibFormQuillEditorComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => LibFormQuillEditorComponent),\r\n      multi: true\r\n    }\r\n  ],\r\n  styles: [\r\n    `\r\n      .font12px {\r\n        font-size: 12px;\r\n      }\r\n      .editor-disabled {\r\n        filter: contrast(0.4) brightness(1.5);\r\n      }\r\n      .ql-editor {\r\n        white-space: normal !important;\r\n      }\r\n    `\r\n  ],\r\n  styleUrls: ['./quill-css/quill.snow.css', './quill-css/quill.bubble.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class LibFormQuillEditorComponent extends FormBase<string>\r\n  implements OnDestroy, OnInit {\r\n  @Input()\r\n  quillModules: any = {};\r\n  @Input()\r\n  maxImageWidth = 2000;\r\n  @Input()\r\n  placeholder = 'Input content here...';\r\n\r\n  quillModulesUsed: any = {};\r\n\r\n  onContentChanged = new Subject();\r\n  destroyed = new Subject();\r\n\r\n  logger: SimpleLog;\r\n\r\n  ngOnInit() {\r\n    this.logger = new SimpleLog(this.debug);\r\n    const quillModulesDefaults = {\r\n      toolbar: '#toolbar',\r\n      counter: { container: '#counter', units: 'words' } as conf,\r\n      counterChars: { container: '#counterChars', units: 'chars' } as conf,\r\n      counterKiloBytes: { container: '#counterKiloBytes', units: 'kb' } as conf,\r\n      imageDrop: true,\r\n      imageCompress: {\r\n        quality: 0.7,\r\n        maxWidth: 1200\r\n      },\r\n      clipboard: {\r\n        matchVisual: false\r\n      },\r\n      imageResize: true\r\n    };\r\n    this.quillModulesUsed = {\r\n      ...quillModulesDefaults,\r\n      ...this.quillModules\r\n    };\r\n\r\n    this.onContentChanged\r\n      .pipe(\r\n        debounceTime(1000),\r\n        takeUntil(this.destroyed),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe((event: any) => {\r\n        const htmlValue = event.html || '<p></p>';\r\n        this.logger.log('LibFormQuillEditorComponent:', { htmlValue, event });\r\n        this.writeValue(htmlValue);\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed.next();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport {\r\n  MatDatetimepickerModule,\r\n  MatNativeDatetimeModule\r\n} from '@mat-datetimepicker/core';\r\nimport { ColorPickerModule } from 'ngx-color-picker';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  MatInputModule,\r\n  MatCardModule,\r\n  MatIconModule,\r\n  MatDatepickerModule,\r\n  MatButtonModule\r\n} from '@angular/material';\r\nimport { NgxMaterialTimepickerModule } from 'ngx-material-timepicker';\r\nimport { QuillModule } from 'ngx-quill';\r\n\r\nimport { LibFormColorComponent } from './form-color.component';\r\nimport { LibFormDateComponent } from './form-date.component';\r\nimport { LibFormTimeComponent } from './form-time.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SignaturePadModule } from 'angular2-signaturepad';\r\nimport { LibFormSignatureComponent } from './form-signature.component';\r\nimport { LibFormQuillEditorComponent } from './form-quill-editor.component';\r\n\r\nconst exportedModules = [\r\n  CommonModule,\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n  MatInputModule,\r\n  MatCardModule,\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatDatepickerModule,\r\n  MatNativeDatetimeModule,\r\n  MatDatetimepickerModule\r\n];\r\n\r\nconst exported = [\r\n  LibFormColorComponent,\r\n  LibFormDateComponent,\r\n  LibFormTimeComponent,\r\n  LibFormSignatureComponent,\r\n  LibFormQuillEditorComponent\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    ...exportedModules,\r\n    CommonModule,\r\n    SignaturePadModule,\r\n    ColorPickerModule,\r\n    QuillModule,\r\n    NgxMaterialTimepickerModule\r\n  ],\r\n  exports: [...exported, ...exportedModules],\r\n  declarations: [...exported],\r\n  providers: []\r\n})\r\nexport class MatReduceFormsUsing3rdPartyModule {}\r\n","import { Component, forwardRef, Input, OnInit, OnDestroy } from '@angular/core';\r\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { FormBase } from '../form-base-class';\r\n\r\nfunction compareObject(l1: {}, l2: {}) {\r\n  if (!l1 || !l2) {\r\n    return false;\r\n  }\r\n  let json1, json2;\r\n  try {\r\n    json1 = JSON.stringify(l1);\r\n    json2 = JSON.stringify(l2);\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n  if (json1 !== json2) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'form-select-object-multiple',\r\n  template: `\r\n    <mat-form-field [appearance]=\"appearance\" class=\"full-width\">\r\n      <mat-select\r\n        [formControl]=\"this.internalControl\"\r\n        [placeholder]=\"placeholder\"\r\n        [compareWith]=\"compareObject\"\r\n        multiple\r\n      >\r\n        <mat-select-trigger>\r\n          <div *ngIf=\"this.internalControl.value as selected\">\r\n            {{ selected?.length ? selected[0][selectionKey] : '' }}\r\n            <span\r\n              *ngIf=\"this.internalControl.value?.length > 1\"\r\n              class=\"example-additional-selection\"\r\n            >\r\n              (+{{ selected.length - 1 }}\r\n              {{ selected?.length === 2 ? 'other' : 'others' }})\r\n            </span>\r\n          </div>\r\n        </mat-select-trigger>\r\n        <mat-option\r\n          *ngFor=\"let selectionObject of selectionObjects\"\r\n          [value]=\"selectionObject\"\r\n        >\r\n          {{ selectionObject[selectionKey] }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  `,\r\n  styles: [\r\n    `\r\n      .full-width {\r\n        width: 100%;\r\n        padding-bottom: 15px;\r\n      }\r\n    `\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => LibFormSelectObjectMultipleComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => LibFormSelectObjectMultipleComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class LibFormSelectObjectMultipleComponent extends FormBase<Object> {\r\n  @Input()\r\n  selectionObjects: Object[];\r\n  @Input()\r\n  selectionKey: string;\r\n\r\n  compareObject = compareObject;\r\n}\r\n","import { Component, forwardRef, Input } from '@angular/core';\r\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { FormBase } from '../form-base-class';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'form-toggle',\r\n  template: `\r\n    <div class=\"full-width\">\r\n      <mat-slide-toggle\r\n        [formControl]=\"internalControl\"\r\n        [name]=\"autoCompleteObscureName\"\r\n        autocomplete=\"dontcompleteme\"\r\n      >\r\n        {{ placeholder }} ({{ value ? yes : no }})\r\n      </mat-slide-toggle>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n      .full-width {\r\n        width: 100%;\r\n        padding-bottom: 15px;\r\n      }\r\n    `\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => LibFormToggleComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => LibFormToggleComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class LibFormToggleComponent extends FormBase<string> {\r\n  @Input()\r\n  yes = 'Yes';\r\n  @Input()\r\n  no = 'No';\r\n}\r\n","import { Component, forwardRef, Input } from '@angular/core';\r\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { FormBase } from '../form-base-class';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'form-text-clearable',\r\n  template: `\r\n    <mat-form-field [appearance]=\"appearance\" class=\"full-width\">\r\n      <input\r\n        *ngIf=\"!disabled && !locked\"\r\n        matInput\r\n        [placeholder]=\"placeholder\"\r\n        [formControl]=\"internalControl\"\r\n        [name]=\"autoCompleteObscureName\"\r\n        [maxlength]=\"maxlength\"\r\n        autocomplete=\"dontcompleteme\"\r\n      />\r\n      <input\r\n        *ngIf=\"disabled || locked\"\r\n        matInput\r\n        [disabled]=\"true\"\r\n        [value]=\"value\"\r\n        [name]=\"autoCompleteObscureName\"\r\n        autocomplete=\"dontcompleteme\"\r\n      />\r\n      <mat-icon\r\n        matSuffix\r\n        class=\"has-pointer\"\r\n        *ngIf=\"!disabled\"\r\n        (click)=\"onClickEditLock()\"\r\n      >\r\n        {{ locked ? 'edit' : 'locked' }}\r\n      </mat-icon>\r\n      <mat-icon matSuffix *ngIf=\"disabled\" class=\"is-grey\">\r\n        edit\r\n      </mat-icon>\r\n    </mat-form-field>\r\n  `,\r\n  styles: [\r\n    `\r\n      .is-grey {\r\n        color: grey;\r\n      }\r\n    `\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => LibFormTextClearableComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => LibFormTextClearableComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class LibFormTextClearableComponent extends FormBase<string> {\r\n\r\n  @Input()\r\n  locked = true;\r\n  @Input()\r\n  maxlength: number;\r\n\r\n  onClickEditLock() {\r\n    this.locked = !this.locked;\r\n    const isEditabled = !this.locked && !this.disabled;\r\n    if (isEditabled) {\r\n      this.internalControl.enable();\r\n    } else {\r\n      this.internalControl.disable();\r\n    }\r\n  }\r\n}\r\n","import { Component, forwardRef, OnInit, OnDestroy } from '@angular/core';\r\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { FormBase } from '../form-base-class';\r\nimport {\r\n  FormControlTypeSafe,\r\n  FormBuilderTypedService\r\n} from '../../services/form-builder-typed.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'form-text-disabled',\r\n  template: `\r\n    <mat-form-field [appearance]=\"appearance\" class=\"full-width\">\r\n      <input\r\n        matInput\r\n        [placeholder]=\"placeholder\"\r\n        [formControl]=\"disabledControl\"\r\n        [name]=\"autoCompleteObscureName\"\r\n        autocomplete=\"dontcompleteme\"\r\n      />\r\n    </mat-form-field>\r\n  `,\r\n  styles: [\r\n    `\r\n      .full-width {\r\n        width: 100%;\r\n      }\r\n    `\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => LibFormTextDisabledComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => LibFormTextDisabledComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class LibFormTextDisabledComponent extends FormBase<string>\r\n  implements OnInit {\r\n  disabledControl: FormControlTypeSafe<string>;\r\n\r\n  constructor(private fb: FormBuilderTypedService) {\r\n    super();\r\n    this.disabledControl = this.fb.control<string>({\r\n      value: '',\r\n      disabled: true\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.disabledControl.setValue(this.internalControl.value);\r\n    this.internalControl.valueChanges\r\n      .pipe(takeUntil(this._destroyed))\r\n      .subscribe(() => {\r\n        this.disabledControl.setValue(this.internalControl.value);\r\n      });\r\n  }\r\n}\r\n","import { Component, forwardRef, Input } from '@angular/core';\r\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { FormBase } from '../form-base-class';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'form-text-icons',\r\n  template: `\r\n    <mat-form-field [appearance]=\"appearance\" class=\"full-width\">\r\n      <mat-icon matPrefix class=\"has-pointer\" *ngIf=\"prefixIcon\">\r\n        {{ prefixIcon }}\r\n      </mat-icon>\r\n      <input\r\n        matInput\r\n        [formControl]=\"internalControl\"\r\n        [maxlength]=\"maxlength\"\r\n        [placeholder]=\"placeholder\"\r\n        [name]=\"autoCompleteObscureName\"\r\n        autocomplete=\"dontcompleteme\"\r\n      />\r\n      <mat-icon\r\n        matSuffix\r\n        class=\"has-pointer\"\r\n        *ngIf=\"!disabled && clearable\"\r\n        (click)=\"onClickClear()\"\r\n      >\r\n        clear\r\n      </mat-icon>\r\n    </mat-form-field>\r\n  `,\r\n  styles: [\r\n    `\r\n      .is-grey {\r\n        color: grey;\r\n      }\r\n    `\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => LibFormTextIconsComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => LibFormTextIconsComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class LibFormTextIconsComponent extends FormBase<string> {\r\n  @Input()\r\n  maxlength: number;\r\n  @Input()\r\n  clearable = true;\r\n  @Input()\r\n  prefixIcon = 'search';\r\n\r\n  onClickClear() {\r\n    this.internalControl.reset();\r\n  }\r\n}\r\n","import { Component, forwardRef, Input, OnInit } from '@angular/core';\r\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { FormBase } from '../form-base-class';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'form-text-password',\r\n  template: `\r\n    <mat-form-field [appearance]=\"appearance\" class=\"full-width\">\r\n      <input\r\n        matInput\r\n        [placeholder]=\"placeholder\"\r\n        [maxlength]=\"maxlength\"\r\n        [formControl]=\"internalControl\"\r\n        [name]=\"autoCompleteObscureName\"\r\n        autocomplete=\"dontcompleteme\"\r\n        [type]=\"inputType\"\r\n      />\r\n      <mat-icon matSuffix (click)=\"toggleHide()\">{{\r\n        hidePassword ? 'visibility_off' : 'visibility'\r\n      }}</mat-icon>\r\n    </mat-form-field>\r\n  `,\r\n  styles: [\r\n    `\r\n      .full-width {\r\n        width: 100%;\r\n      }\r\n    `\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => LibFormTextPasswordComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => LibFormTextPasswordComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class LibFormTextPasswordComponent extends FormBase<string>\r\n  implements OnInit {\r\n  @Input()\r\n  maxlength: number;\r\n\r\n  get inputType() {\r\n    return this.hidePassword ? 'password' : 'text';\r\n  }\r\n\r\n  hidePassword = true;\r\n\r\n  toggleHide() {\r\n    this.hidePassword = !this.hidePassword;\r\n  }\r\n}\r\n","import { Component, forwardRef, Input, OnInit } from '@angular/core';\r\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { FormBase } from '../form-base-class';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'form-text',\r\n  template: `\r\n    <mat-form-field [appearance]=\"appearance\" class=\"full-width\">\r\n      <input\r\n        matInput\r\n        [placeholder]=\"placeholder\"\r\n        [maxlength]=\"maxlength\"\r\n        [formControl]=\"internalControl\"\r\n        [name]=\"autoCompleteObscureName\"\r\n        autocomplete=\"dontcompleteme\"\r\n      />\r\n    </mat-form-field>\r\n  `,\r\n  styles: [\r\n    `\r\n      .full-width {\r\n        width: 100%;\r\n      }\r\n    `\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => LibFormTextComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => LibFormTextComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class LibFormTextComponent extends FormBase<string> implements OnInit {\r\n  @Input()\r\n  maxlength: number;\r\n}\r\n","import { Component, forwardRef, Input, OnInit } from '@angular/core';\r\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { FormBase } from '../form-base-class';\r\nimport {\r\n  FormControlTypeSafe,\r\n  FormBuilderTypedService\r\n} from '../../services/form-builder-typed.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'form-textarea-disabled',\r\n  template: `\r\n    <mat-form-field [appearance]=\"appearance\" class=\"full-width\">\r\n      <textarea\r\n        matInput\r\n        [rows]=\"rows\"\r\n        [placeholder]=\"placeholder\"\r\n        [formControl]=\"disabledControl\"\r\n        [name]=\"autoCompleteObscureName\"\r\n        autocomplete=\"dontcompleteme\"\r\n      ></textarea>\r\n    </mat-form-field>\r\n  `,\r\n  styles: [\r\n    `\r\n      .full-width {\r\n        width: 100%;\r\n      }\r\n    `\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => LibFormTextAreaDisabledComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => LibFormTextAreaDisabledComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class LibFormTextAreaDisabledComponent extends FormBase<string>\r\n  implements OnInit {\r\n  @Input()\r\n  rows = 4;\r\n\r\n  disabledControl: FormControlTypeSafe<string>;\r\n\r\n  constructor(private fb: FormBuilderTypedService) {\r\n    super();\r\n    this.disabledControl = this.fb.control<string>({\r\n      value: '',\r\n      disabled: true\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.disabledControl.setValue(this.internalControl.value);\r\n    this.internalControl.valueChanges\r\n      .pipe(takeUntil(this._destroyed))\r\n      .subscribe(() => {\r\n        this.disabledControl.setValue(this.internalControl.value);\r\n      });\r\n  }\r\n}\r\n","import { Component, forwardRef, Input } from '@angular/core';\r\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { FormBase } from '../form-base-class';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'form-textarea',\r\n  template: `\r\n    <mat-form-field [appearance]=\"appearance\" class=\"full-width\">\r\n      <textarea\r\n        matInput\r\n        [rows]=\"rows\"\r\n        [placeholder]=\"placeholder\"\r\n        [maxlength]=\"maxlength\"\r\n        [formControl]=\"internalControl\"\r\n        [name]=\"autoCompleteObscureName\"\r\n        autocomplete=\"dontcompleteme\"\r\n      ></textarea>\r\n    </mat-form-field>\r\n  `,\r\n  styles: [\r\n    `\r\n      .full-width {\r\n        width: 100%;\r\n      }\r\n    `\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => LibFormTextAreaComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => LibFormTextAreaComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class LibFormTextAreaComponent extends FormBase<string> {\r\n  @Input()\r\n  rows = 4;\r\n  @Input()\r\n  maxlength: number;\r\n}\r\n","import { Component, forwardRef, Input, OnInit } from '@angular/core';\r\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR, FormControl } from '@angular/forms';\r\nimport { takeUntil, debounceTime, tap, delay } from 'rxjs/operators';\r\nimport { FormBase } from '../form-base-class';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'form-toggle-reversed',\r\n  template: `\r\n    <div class=\"full-width\">\r\n      <mat-slide-toggle\r\n        [formControl]=\"reversedControl\"\r\n        [name]=\"autoCompleteObscureName\"\r\n        autocomplete=\"dontcompleteme\"\r\n      >\r\n        <div class=\"flex-center\">\r\n          <ng-content></ng-content>\r\n          <span>{{ placeholder }}</span>\r\n          <span>({{ value ? yes : no }})</span>\r\n        </div>\r\n      </mat-slide-toggle>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n      span {\r\n        margin: 2px;\r\n      }\r\n      .full-width {\r\n        width: 100%;\r\n        padding-bottom: 15px;\r\n      }\r\n      .flex-center {\r\n        display: flex;\r\n        align-items: center;\r\n      }\r\n    `\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => LibFormToggleReversedComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => LibFormToggleReversedComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class LibFormToggleReversedComponent extends FormBase<boolean>\r\n  implements OnInit {\r\n  @Input()\r\n  yes = 'Yes';\r\n  @Input()\r\n  no = 'No';\r\n\r\n  reversedControl = new FormControl();\r\n\r\n  private lockControl: boolean;\r\n\r\n  ngOnInit() {\r\n    this.reversedControl.valueChanges\r\n      .pipe(\r\n        takeUntil(this._destroyed),\r\n        debounceTime(100)\r\n      )\r\n      .subscribe(value => {\r\n        if (this.lockControl) {\r\n          return;\r\n        }\r\n        this.value = !value;\r\n        // console.log('reversedControl.valueChanges', { thisValue: this.value });\r\n      });\r\n\r\n    this.internalControl.valueChanges\r\n      .pipe(\r\n        takeUntil(this._destroyed),\r\n        debounceTime(100),\r\n        tap(() => (this.lockControl = true)),\r\n        delay(100),\r\n        tap(value => this.reversedControl.setValue(!value)),\r\n        delay(100),\r\n        tap(() => (this.lockControl = false))\r\n      )\r\n      .subscribe(() => {\r\n        // console.log('reversedControl.valueChanges', { thisValue: this.value });\r\n      });\r\n\r\n    this.internalControl.statusChanges\r\n      .pipe(takeUntil(this._destroyed))\r\n      .subscribe(() => {\r\n        if (this.disabled) {\r\n          this.reversedControl.disable();\r\n        } else {\r\n          this.reversedControl.enable();\r\n        }\r\n      });\r\n  }\r\n}\r\n","import { Component, forwardRef, Input, OnInit, OnDestroy } from '@angular/core';\r\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { FormBase } from '../form-base-class';\r\n\r\nfunction compareObject(l1: {}, l2: {}) {\r\n  if (!l1 || !l2) {\r\n    return false;\r\n  }\r\n  let json1, json2;\r\n  try {\r\n    json1 = JSON.stringify(l1);\r\n    json2 = JSON.stringify(l2);\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n  if (json1 !== json2) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'form-select-object',\r\n  template: `\r\n    <mat-form-field [appearance]=\"appearance\" class=\"full-width\">\r\n      <mat-select\r\n        [formControl]=\"this.internalControl\"\r\n        [placeholder]=\"placeholder\"\r\n        [compareWith]=\"compareObject\"\r\n      >\r\n        <mat-option\r\n          *ngFor=\"let selectionObject of selectionObjects\"\r\n          [value]=\"selectionObject\"\r\n        >\r\n          {{ selectionObject[selectionKey] }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  `,\r\n  styles: [\r\n    `\r\n      .full-width {\r\n        width: 100%;\r\n        padding-bottom: 15px;\r\n      }\r\n    `\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => LibFormSelectObjectComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => LibFormSelectObjectComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class LibFormSelectObjectComponent extends FormBase<Object> {\r\n  @Input()\r\n  selectionObjects: Object[];\r\n  @Input()\r\n  selectionKey: string;\r\n\r\n  compareObject = compareObject;\r\n\r\n  writeValue(newVal: Object) {\r\n    this.value = newVal || {};\r\n  }\r\n}\r\n","import { Component, forwardRef, Input, OnInit, OnDestroy } from '@angular/core';\r\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { FormBase } from '../form-base-class';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'form-select-string',\r\n  template: `\r\n    <mat-form-field [appearance]=\"appearance\" class=\"full-width\">\r\n      <mat-select\r\n        [formControl]=\"this.internalControl\"\r\n        [placeholder]=\"placeholder\"\r\n      >\r\n        <mat-option *ngFor=\"let selection of selections\" [value]=\"selection\">\r\n          {{ selection }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  `,\r\n  styles: [\r\n    `\r\n      .full-width {\r\n        width: 100%;\r\n        padding-bottom: 15px;\r\n      }\r\n    `\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => LibFormSelectStringComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => LibFormSelectStringComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class LibFormSelectStringComponent extends FormBase<string> {\r\n  @Input()\r\n  selections: string[];\r\n}\r\n","// tslint:disable: variable-name\r\nimport {\r\n  Component,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  ViewChild,\r\n  ElementRef,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport {\r\n  MatAutocomplete,\r\n  MatAutocompleteSelectedEvent,\r\n  MatChipInputEvent,\r\n  MatSnackBar,\r\n  MatAutocompleteTrigger\r\n} from '@angular/material';\r\nimport { FormControl, NG_VALIDATORS, NG_VALUE_ACCESSOR, AbstractControl } from '@angular/forms';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { FormBase } from '../form-base-class';\r\nimport { Tag } from './Tag';\r\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\r\n\r\nimport { v1 as uuidv1 } from 'uuid';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'form-tag-multiple',\r\n  template: `\r\n    <mat-form-field\r\n      [appearance]=\"appearance\"\r\n      class=\"tag-full-width\"\r\n      [class.form-tag-control-invalid]=\"hasRed()\"\r\n    >\r\n      <mat-chip-list #chipList [disabled]=\"disabled\">\r\n        <mat-chip\r\n          *ngFor=\"let tag of selectedTags\"\r\n          [selectable]=\"selectable\"\r\n          [disabled]=\"this.internalControl.disabled\"\r\n          [removable]=\"removable\"\r\n          (removed)=\"removeTagChip(tag)\"\r\n        >\r\n          {{ tag.name }}\r\n          <mat-icon\r\n            matChipRemove\r\n            *ngIf=\"removable && this.internalControl.enabled\"\r\n            >cancel</mat-icon\r\n          >\r\n        </mat-chip>\r\n        <input\r\n          [placeholder]=\"placeholder\"\r\n          #textInput\r\n          [name]=\"autoCompleteObscureName\"\r\n          autocomplete=\"dontcompleteme\"\r\n          [formControl]=\"inputTextControl\"\r\n          [matAutocomplete]=\"auto\"\r\n          [matChipInputFor]=\"chipList\"\r\n          [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n          [matChipInputAddOnBlur]=\"addOnBlur\"\r\n          (matChipInputTokenEnd)=\"addFromTextInput($event)\"\r\n          (keydown)=\"focusOnEnter($event)\"\r\n          (blur)=\"onBlur()\"\r\n        />\r\n        <mat-icon\r\n          class=\"tag-icon\"\r\n          matTooltip=\"Add tags here...\"\r\n          matBadge=\"â\"\r\n          matSuffix\r\n          >local_offer</mat-icon\r\n        >\r\n      </mat-chip-list>\r\n      <mat-autocomplete\r\n        #auto=\"matAutocomplete\"\r\n        (optionSelected)=\"optionSelectedFromList($event)\"\r\n      >\r\n        <mat-option\r\n          *ngFor=\"let choiceName of filteredTagNames$ | async\"\r\n          [value]=\"choiceName\"\r\n        >\r\n          {{ choiceName }}\r\n        </mat-option>\r\n      </mat-autocomplete>\r\n    </mat-form-field>\r\n  `,\r\n  styles: [\r\n    `\r\n      .tag-full-width {\r\n        width: 100%;\r\n      }\r\n      .tag-icon {\r\n        color: grey;\r\n        right: 15px;\r\n      }\r\n      .tag-icon .mat-badge-content {\r\n        background-color: #afc5b000 !important;\r\n        right: 1px !important;\r\n        top: 3px !important;\r\n        color: white !important;\r\n      }\r\n      .form-tag-control-invalid .mat-form-field-label {\r\n        color: #ff4f4f !important;\r\n      }\r\n    `\r\n  ],\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => LibFormTagMultipleComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => LibFormTagMultipleComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class LibFormTagMultipleComponent extends FormBase<Tag[]>\r\n  implements OnInit, OnDestroy {\r\n  // EXTERNAL API\r\n  private _choices: Tag[] = [];\r\n  @Input()\r\n  set choices(newChoices) {\r\n    if (!newChoices) {\r\n      newChoices = [];\r\n    }\r\n    this._choices = newChoices;\r\n    this.inputTextControl.patchValue(this.inputTextControl.value);\r\n  }\r\n  get choices() {\r\n    return this._choices;\r\n  }\r\n  @Input() customValues: boolean;\r\n  @Input() removable = true;\r\n  @Input() filterStrategy: 'all' | 'beginning' = 'all';\r\n  @Output() addedNewTag = new EventEmitter<Tag>();\r\n\r\n  // INTERNAL\r\n\r\n  get selectedTags() {\r\n    return this.value;\r\n  }\r\n  get choicesStrings(): string[] {\r\n    return this.choices.map(t => (!!t ? t.name : ''));\r\n  }\r\n  visible = true;\r\n  selectable = true;\r\n  addOnBlur = true;\r\n  separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  inputTextControl = new FormControl();\r\n  filteredTagNames$: Observable<string[]>;\r\n\r\n  @ViewChild('textInput', {} as any) textInput: ElementRef<HTMLInputElement>;\r\n  @ViewChild('textInput', { read: MatAutocompleteTrigger } as any)\r\n  matAutocompleteTrigger: MatAutocompleteTrigger;\r\n  @ViewChild('auto', {} as any)\r\n  matAutocomplete: MatAutocomplete;\r\n\r\n  destroyed = new Subject<void>();\r\n\r\n  constructor(private snack: MatSnackBar) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.filteredTagNames$ = this.inputTextControl.valueChanges.pipe(\r\n      startWith(null),\r\n      map((tagName: string | null) =>\r\n        tagName ? this._filter(tagName) : this.getChoicesMinusSelected()\r\n      )\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed.next();\r\n  }\r\n\r\n  writeValue(newVal: Tag[]) {\r\n    this.value = newVal || [];\r\n  }\r\n\r\n  private getChoicesMinusSelected(): string[] {\r\n    const alreadySelectedSet = new Set(this.selectedTags.map(t => t.name));\r\n    return this.choicesStrings.filter(\r\n      choice => !alreadySelectedSet.has(choice)\r\n    );\r\n  }\r\n\r\n  private _filter(value: string): string[] {\r\n    const choices = this.getChoicesMinusSelected();\r\n    if (this.filterStrategy === 'all') {\r\n      return _filterAll();\r\n    } else {\r\n      return _filterBeginning();\r\n    }\r\n    function _filterAll(): string[] {\r\n      const filterValue = value.toLowerCase();\r\n      return choices.filter(choice =>\r\n        (choice + '').toLowerCase().includes(filterValue)\r\n      );\r\n    }\r\n    function _filterBeginning(): string[] {\r\n      const filterValue = value.toLowerCase();\r\n      return choices.filter(\r\n        choice => (choice + '').toLowerCase().indexOf(filterValue) === 0\r\n      );\r\n    }\r\n  }\r\n\r\n  onBlur() {\r\n    this.CheckValueIsValid();\r\n  }\r\n\r\n  removeTagChip(tagToRemove: Tag) {\r\n    this.log('removeTagChip', { tagToRemove });\r\n    this.matAutocompleteTrigger.closePanel();\r\n    this.value = this.value.filter(t => t.id !== tagToRemove.id);\r\n    this.inputTextControl.setValue(null);\r\n    this.inputTextControl.markAsTouched();\r\n  }\r\n\r\n  async addFromTextInput(event: MatChipInputEvent): Promise<void> {\r\n    const value = event.value;\r\n    const inputTrimmed = (value || '').trim();\r\n    if (!inputTrimmed) {\r\n      this.resetTextInput();\r\n      return;\r\n    }\r\n    this.log('addFromTextInput', { value: event.value });\r\n    // Add fruit only when MatAutocomplete is not open\r\n    // To make sure this does not conflict with OptionSelected Event\r\n    const found = this.choices.find(c => c.name === inputTrimmed);\r\n    if (found) {\r\n      this.log('addFromTextInput() found match, adding that instead of making new tag');\r\n      this.addedTagToInternalValue(found);\r\n      this.resetTextInput();\r\n      return;\r\n    }\r\n    if (!this.customValues && this.matAutocomplete.isOpen) {\r\n      // this.resetTextInput();\r\n      return;\r\n    }\r\n    if (!this.customValues) {\r\n      this.resetTextInput();\r\n      this.snack.open('Must select item from list', 'Close', {\r\n        duration: 3000,\r\n        horizontalPosition: 'center',\r\n        verticalPosition: 'bottom'\r\n      });\r\n      this.log('addFromTextInput() unable to add custom values...');\r\n      return;\r\n    }\r\n    this.resetTextInput();\r\n    const newTag = await this.makeNewTag(inputTrimmed);\r\n    this.addedNewTag.emit(newTag);\r\n    this.choices.push(newTag);\r\n    this.addedTagToInternalValue(newTag);\r\n    this.notify(`Adding \"${newTag.name}\" to the global list...`);\r\n    this.log('addFromTextInput() added new tag', { newTag });\r\n  }\r\n\r\n  resetTextInput() {\r\n    // Reset the input value\r\n    this.textInput.nativeElement.value = '';\r\n    this.inputTextControl.setValue(null);\r\n  }\r\n\r\n  optionSelectedFromList(event: MatAutocompleteSelectedEvent): void {\r\n    this.log('optionSelectedFromList()', {\r\n      event,\r\n      value: event.option.viewValue\r\n    });\r\n    const autoCompleteValue = event.option.viewValue;\r\n    const selectedTag = [...(this.choices || [])]\r\n      .filter(tag => tag.name === autoCompleteValue)\r\n      .pop();\r\n    if (!selectedTag) {\r\n      this.warn(\r\n        'optionSelectedFromList() not sure how autocomplete selected something not in the list...'\r\n      );\r\n      return;\r\n    }\r\n    this.addedTagToInternalValue(selectedTag);\r\n    this.textInput.nativeElement.value = '';\r\n    this.textInput.nativeElement.blur();\r\n    this.inputTextControl.setValue(null);\r\n  }\r\n\r\n  async makeNewTag(name): Promise<Tag> {\r\n    const newTagId = uuidv1();\r\n    const newTag: Tag = {\r\n      id: newTagId,\r\n      name: name.trim()\r\n    };\r\n    return newTag;\r\n  }\r\n\r\n  private addedTagToInternalValue(newTag: Tag) {\r\n    const currentValue = [...(this.value || [])];\r\n    currentValue.push(newTag);\r\n    this.value = currentValue;\r\n  }\r\n\r\n  focusOnEnter(e: KeyboardEvent) {\r\n    if (e.keyCode === 13) {\r\n      this.log('enter key pressed', { key: e.key, code: e.keyCode });\r\n      setTimeout(() => {\r\n        this.textInput.nativeElement.focus();\r\n      });\r\n    }\r\n  }\r\n\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    if (isDisabled) {\r\n      this.inputTextControl.disable();\r\n    } else {\r\n      this.inputTextControl.enable();\r\n    }\r\n    super.setDisabledState(isDisabled);\r\n  }\r\n\r\n  hasRed() {\r\n    const isDirty = this.inputTextControl.touched || this.inputTextControl.dirty;\r\n    const isInValid = this.internalControl.invalid;\r\n    return isDirty && isInValid;\r\n  }\r\n\r\n  notify(message: string) {\r\n    this.snack.open(message, 'Close', {\r\n      duration: 3000,\r\n      horizontalPosition: 'center',\r\n      verticalPosition: 'bottom'\r\n    });\r\n  }\r\n\r\n  log(msg: string, obj?: any) {\r\n    if (!obj) {\r\n      return console.log('form-tag-multiple: ', msg);\r\n    }\r\n    console.log('form-tag-multiple: ', msg, obj);\r\n  }\r\n\r\n  warn(msg: string, obj?: any) {\r\n    if (!obj) {\r\n      return console.log('form-tag-multiple: ', msg);\r\n    }\r\n    console.warn('form-tag-multiple: ', msg, obj);\r\n  }\r\n\r\n  CheckValueIsValid() {\r\n    if (!this.internalControl || !this.internalControl.validator) {\r\n      return;\r\n    }\r\n    const validator = this.internalControl.validator({} as AbstractControl);\r\n    const isRequired = validator && validator.required;\r\n    if (!isRequired) {\r\n      return null;\r\n    }\r\n    if (!Array.isArray(this.value)) {\r\n      return 'form value is not an array';\r\n    }\r\n    if (!this.value.length) {\r\n      return 'form value is required but has no value';\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","// tslint:disable: variable-name\r\nimport {\r\n  Component,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  ViewChild,\r\n  ElementRef\r\n} from '@angular/core';\r\nimport {\r\n  MatAutocomplete,\r\n  MatAutocompleteSelectedEvent,\r\n  MatChipInputEvent,\r\n  MatSnackBar,\r\n  MatAutocompleteTrigger\r\n} from '@angular/material';\r\nimport { FormControl, NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { map, startWith, takeUntil } from 'rxjs/operators';\r\nimport { ConfirmationService } from '../../dialogs/app-confirmation.component';\r\nimport { FormBase } from '../form-base-class';\r\nimport { Tag } from './Tag';\r\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\r\n\r\nimport { v1 as uuidv1 } from 'uuid';\r\nimport { SimpleLog } from '../../utils/logger';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'form-tag-single',\r\n  template: `\r\n    <mat-form-field [appearance]=\"appearance\" class=\"full-width\">\r\n      <mat-chip-list #chipList [disabled]=\"disabled\">\r\n        <mat-chip\r\n          *ngIf=\"selectedTag as tag\"\r\n          [selectable]=\"selectable\"\r\n          [removable]=\"removable\"\r\n          (removed)=\"removeTagChip(tag)\"\r\n          [disabled]=\"disabled\"\r\n        >\r\n          {{ tag.name }}\r\n          <mat-icon matChipRemove *ngIf=\"removable && !disabled\"\r\n            >cancel</mat-icon\r\n          >\r\n        </mat-chip>\r\n        <input\r\n          [placeholder]=\"placeholder\"\r\n          #textInput\r\n          [name]=\"autoCompleteObscureName\"\r\n          autocomplete=\"dontcompleteme\"\r\n          [formControl]=\"inputTextControl\"\r\n          [matAutocomplete]=\"auto\"\r\n          [matChipInputFor]=\"chipList\"\r\n          [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n          [matChipInputAddOnBlur]=\"addOnBlur\"\r\n          (matChipInputTokenEnd)=\"addFromTextInput($event)\"\r\n          (keydown)=\"focusOnEnter($event)\"\r\n        />\r\n        <mat-icon\r\n          class=\"is-grey r15\"\r\n          matTooltip=\"Add a single tag here, you can manage all your tags using the tag list editor in the settings menu\"\r\n          matBadge=\"1\"\r\n          matSuffix\r\n          >local_offer</mat-icon\r\n        >\r\n      </mat-chip-list>\r\n      <mat-autocomplete\r\n        #auto=\"matAutocomplete\"\r\n        (optionSelected)=\"optionSelectedFromList($event)\"\r\n      >\r\n        <mat-option\r\n          *ngFor=\"let choiceName of filteredTagNames$ | async\"\r\n          [value]=\"choiceName\"\r\n        >\r\n          {{ choiceName }}\r\n        </mat-option>\r\n      </mat-autocomplete>\r\n    </mat-form-field>\r\n  `,\r\n  styles: [\r\n    `\r\n      .full-width {\r\n        width: 100%;\r\n      }\r\n      .is-grey {\r\n        color: grey;\r\n      }\r\n      .r15 {\r\n        right: 15px;\r\n      }\r\n      mat-icon span {\r\n        background-color: #afc5b000;\r\n        right: 1px !important;\r\n        top: 3px !important;\r\n        color: white;\r\n      }\r\n    `\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => LibFormTagSingleComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => LibFormTagSingleComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class LibFormTagSingleComponent extends FormBase<Tag>\r\n  implements OnInit, OnDestroy {\r\n  // EXTERNAL API\r\n  private _choices: Tag[];\r\n  @Input()\r\n  set choices(newChoices) {\r\n    if (!newChoices) {\r\n      newChoices = [];\r\n    }\r\n    this._choices = newChoices;\r\n    this.inputTextControl.patchValue(this.inputTextControl.value);\r\n  }\r\n  get choices() {\r\n    return this._choices;\r\n  }\r\n  @Input() customValues: boolean;\r\n  @Input() filterStrategy: 'all' | 'beginning' = 'all';\r\n  @Input() removable = true;\r\n  @Output() addedNewTag = new EventEmitter<Tag>();\r\n\r\n  // INTERNAL\r\n\r\n  get selectedTag() {\r\n    return this.value;\r\n  }\r\n  get choicesStrings(): string[] {\r\n    return this.choices.map(t => (!!t ? t.name : ''));\r\n  }\r\n  visible = true;\r\n  selectable = true;\r\n  addOnBlur = true;\r\n  separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  inputTextControl = new FormControl();\r\n  filteredTagNames$: Observable<string[]>;\r\n\r\n  @ViewChild('textInput', {} as any) textInput: ElementRef<HTMLInputElement>;\r\n  @ViewChild('textInput', { read: MatAutocompleteTrigger } as any)\r\n  matAutocompleteTrigger: MatAutocompleteTrigger;\r\n  @ViewChild('auto', {} as any)\r\n  matAutocomplete: MatAutocomplete;\r\n\r\n  destroyed = new Subject<void>();\r\n  logger: SimpleLog;\r\n\r\n  constructor(\r\n    private confirm: ConfirmationService,\r\n    private snack: MatSnackBar\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.checkExists(this.choices, 'this.selectChoices$');\r\n    this.logger = new SimpleLog(this.debug);\r\n\r\n    this.filteredTagNames$ = this.inputTextControl.valueChanges.pipe(\r\n      startWith(null),\r\n      map((tagName: string | null) =>\r\n        tagName ? this._filter(tagName) : this.getChoicesMinusSelected()\r\n      )\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed.next();\r\n  }\r\n\r\n  writeValue(newVal: Tag) {\r\n    this.value = newVal;\r\n  }\r\n\r\n  private getChoicesMinusSelected(): string[] {\r\n    const selectedTagName = this.selectedTag ? this.selectedTag.name : '';\r\n    const alreadySelectedSet = new Set([selectedTagName]);\r\n    return this.choicesStrings.filter(\r\n      choice => !alreadySelectedSet.has(choice)\r\n    );\r\n  }\r\n\r\n  private _filter(value: string): string[] {\r\n    const choices = this.getChoicesMinusSelected();\r\n    if (this.filterStrategy === 'all') {\r\n      return _filterAll();\r\n    } else {\r\n      return _filterBeginning();\r\n    }\r\n    function _filterAll(): string[] {\r\n      const filterValue = value.toLowerCase();\r\n      return choices.filter(choice =>\r\n        (choice + '').toLowerCase().includes(filterValue)\r\n      );\r\n    }\r\n    function _filterBeginning(): string[] {\r\n      const filterValue = value.toLowerCase();\r\n      return choices.filter(\r\n        choice => (choice + '').toLowerCase().indexOf(filterValue) === 0\r\n      );\r\n    }\r\n  }\r\n\r\n  checkExists(val, name) {\r\n    if (val == null) {\r\n      throw new Error(name + ' has not been defined');\r\n    }\r\n  }\r\n\r\n  removeTagChip(tagToRemove: Tag) {\r\n    this.logger.log('removeTagChip', { tagToRemove });\r\n    this.matAutocompleteTrigger.closePanel();\r\n    this.value = null;\r\n    this.inputTextControl.setValue(null);\r\n  }\r\n\r\n  async addFromTextInput(event: MatChipInputEvent): Promise<void> {\r\n    const value = event.value;\r\n    const inputTrimmed = (value || '').trim();\r\n    if (!inputTrimmed) {\r\n      this.resetTextInput();\r\n      return;\r\n    }\r\n    this.logger.log('addFromTextInput', { value: event.value });\r\n    // Add fruit only when MatAutocomplete is not open\r\n    // To make sure this does not conflict with OptionSelected Event\r\n    const found = this.choices.find(c => c.name === inputTrimmed);\r\n    if (found) {\r\n      this.logger.log('addFromTextInput() found match, adding that instead of making new tag');\r\n      this.addedTagToInternalValue(found);\r\n      this.resetTextInput();\r\n      return;\r\n    }\r\n    if (!this.customValues && this.matAutocomplete.isOpen) {\r\n      // this.resetTextInput();\r\n      return;\r\n    }\r\n    if (!this.customValues) {\r\n      this.resetTextInput();\r\n      this.snack.open('Must select item from list', 'Close', {\r\n        duration: 3000,\r\n        horizontalPosition: 'center',\r\n        verticalPosition: 'bottom'\r\n      });\r\n      this.logger.log('addFromTextInput() unable to add custom values...');\r\n      return;\r\n    }\r\n    this.resetTextInput();\r\n    const confirmed = await this.confirm.AskConfirm(\r\n      `Are you sure you want to add: \"${inputTrimmed}\" to the global list?`\r\n    );\r\n    if (!confirmed) {\r\n      this.logger.log('addFromTextInput() not confirmed, nothing changed...');\r\n      this.notify('Nothing added globally');\r\n      return;\r\n    }\r\n    const newTag = await this.makeNewTag(inputTrimmed);\r\n    this.addedNewTag.emit(newTag);\r\n    this.choices.push(newTag);\r\n    this.addedTagToInternalValue(newTag);\r\n    this.notify(`Adding \"${newTag.name}\" to the global list...`);\r\n    this.logger.log('addFromTextInput() added new tag', { newTag, confirmed });\r\n  }\r\n\r\n  resetTextInput() {\r\n    // Reset the input value\r\n    this.textInput.nativeElement.value = '';\r\n    this.inputTextControl.setValue('');\r\n  }\r\n\r\n  optionSelectedFromList(event: MatAutocompleteSelectedEvent): void {\r\n    this.logger.log('optionSelectedFromList()', {\r\n      event,\r\n      value: event.option.viewValue\r\n    });\r\n    const autoCompleteValue = event.option.viewValue;\r\n    const selectedTag = [...(this.choices || [])]\r\n      .filter(tag => tag.name === autoCompleteValue)\r\n      .pop();\r\n    if (!selectedTag) {\r\n      this.logger.warn(\r\n        'optionSelectedFromList() not sure how autocomplete selected something not in the list...'\r\n      );\r\n      return;\r\n    }\r\n    this.addedTagToInternalValue(selectedTag);\r\n    this.textInput.nativeElement.value = '';\r\n    this.textInput.nativeElement.blur();\r\n    this.inputTextControl.setValue(null);\r\n  }\r\n\r\n  async makeNewTag(name): Promise<Tag> {\r\n    const newTagId = uuidv1();\r\n    const newTag: Tag = {\r\n      id: newTagId,\r\n      name: name.trim()\r\n    };\r\n    return newTag;\r\n  }\r\n\r\n  private addedTagToInternalValue(newTag: Tag) {\r\n    this.value = newTag;\r\n  }\r\n\r\n  focusOnEnter(e: KeyboardEvent) {\r\n    if (e.keyCode === 13) {\r\n      this.logger.log('enter key pressed', { key: e.key, code: e.keyCode });\r\n      setTimeout(() => {\r\n        this.textInput.nativeElement.focus();\r\n      });\r\n    }\r\n  }\r\n\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    if (isDisabled) {\r\n      this.inputTextControl.disable();\r\n    } else {\r\n      this.inputTextControl.enable();\r\n    }\r\n    super.setDisabledState(isDisabled);\r\n  }\r\n\r\n  notify(message: string) {\r\n    this.snack.open(message, 'Close', {\r\n      duration: 3000,\r\n      horizontalPosition: 'center',\r\n      verticalPosition: 'bottom'\r\n    });\r\n  }\r\n}\r\n","import { Component, forwardRef, Input, OnInit } from '@angular/core';\r\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { FormBase } from '../form-base-class';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'form-number',\r\n  template: `\r\n    <mat-form-field [appearance]=\"appearance\" class=\"full-width\">\r\n      <input\r\n        matInput\r\n        type=\"number\"\r\n        [min]=\"min\"\r\n        [max]=\"max\"\r\n        [step]=\"step\"\r\n        [placeholder]=\"placeholder\"\r\n        [formControl]=\"internalControl\"\r\n        [name]=\"autoCompleteObscureName\"\r\n        autocomplete=\"dontcompleteme\"\r\n      />\r\n    </mat-form-field>\r\n  `,\r\n  styles: [\r\n    `\r\n      .full-width {\r\n        width: 100%;\r\n      }\r\n    `\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => LibFormNumberComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => LibFormNumberComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class LibFormNumberComponent extends FormBase<number> implements OnInit {\r\n  @Input()\r\n  min = 0;\r\n  @Input()\r\n  max = 100;\r\n  @Input()\r\n  step = 1;\r\n}\r\n","import { Component, forwardRef, Input, OnInit, OnDestroy } from '@angular/core';\r\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { FormBase } from '../form-base-class';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'form-select-string-multiple',\r\n  template: `\r\n    <mat-form-field [appearance]=\"appearance\" class=\"full-width\">\r\n      <mat-select\r\n        [formControl]=\"this.internalControl\"\r\n        [placeholder]=\"placeholder\"\r\n        multiple\r\n      >\r\n        <mat-select-trigger>\r\n          <div *ngIf=\"this.internalControl.value as selected\">\r\n            {{ selected?.length ? selected[0] : '' }}\r\n            <span\r\n              *ngIf=\"this.internalControl.value?.length > 1\"\r\n              class=\"example-additional-selection\"\r\n            >\r\n              (+{{ selected.length - 1 }}\r\n              {{ selected?.length === 2 ? 'other' : 'others' }})\r\n            </span>\r\n          </div>\r\n        </mat-select-trigger>\r\n        <mat-option *ngFor=\"let selection of selections\" [value]=\"selection\">\r\n          {{ selection }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  `,\r\n  styles: [\r\n    `\r\n      .full-width {\r\n        width: 100%;\r\n        padding-bottom: 15px;\r\n      }\r\n    `\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => LibFormSelectStringMultipleComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => LibFormSelectStringMultipleComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class LibFormSelectStringMultipleComponent extends FormBase<string[]> {\r\n  @Input()\r\n  selections: string[];\r\n}\r\n","import { NgModule } from '@angular/core';\nimport {\n  MatSnackBarModule,\n  MatInputModule,\n  MatSlideToggleModule,\n  MatChipsModule,\n  MatCardModule,\n  MatButtonModule,\n  MatBadgeModule,\n  MatDialogModule,\n  MatAutocompleteModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatSelectModule,\n  MatCheckboxModule,\n  MatTooltipModule,\n  MatProgressSpinnerModule\n} from '@angular/material';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { LibFormSelectObjectMultipleComponent } from './form-select-object-multiple.component';\nimport { LibFormToggleComponent } from './form-toggle.component';\nimport { LibFormTextClearableComponent } from './form-text-clearable.component';\nimport { LibFormTextDisabledComponent } from './form-text-disabled.component';\nimport { LibFormTextIconsComponent } from './form-text-icons.component';\nimport { LibFormTextPasswordComponent } from './form-text-password.component';\nimport { LibFormTextComponent } from './form-text.component';\nimport { LibFormTextAreaDisabledComponent } from './form-textarea-disabled.component';\nimport { LibFormTextAreaComponent } from './form-textarea.component';\nimport { LibFormToggleReversedComponent } from './form-toggle-reversed.component';\nimport { LibFormSelectObjectComponent } from './form-select-object.component';\nimport { LibFormSelectStringComponent } from './form-select-string.component';\nimport { LibFormTagMultipleComponent } from './form-tag-multiple.component';\nimport { LibFormTagSingleComponent } from './form-tag-single.component';\nimport { LibFormNumberComponent } from './form-number.component';\nimport { LibFormSelectStringMultipleComponent } from './form-select-string-multiple.component';\n\nconst exportedModules = [\n  CommonModule,\n  FormsModule,\n  ReactiveFormsModule,\n  MatSnackBarModule,\n  MatInputModule,\n  MatSlideToggleModule,\n  MatChipsModule,\n  MatCardModule,\n  MatButtonModule,\n  MatBadgeModule,\n  MatDialogModule,\n  MatAutocompleteModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatSelectModule,\n  MatCheckboxModule,\n  MatTooltipModule,\n  MatProgressSpinnerModule\n];\n\nconst exported = [\n  LibFormNumberComponent,\n  LibFormSelectObjectComponent,\n  LibFormSelectObjectMultipleComponent,\n  LibFormSelectStringComponent,\n  LibFormSelectStringMultipleComponent,\n  LibFormTagMultipleComponent,\n  LibFormTagSingleComponent,\n  LibFormTextAreaComponent,\n  LibFormTextAreaDisabledComponent,\n  LibFormTextClearableComponent,\n  LibFormTextComponent,\n  LibFormTextDisabledComponent,\n  LibFormTextIconsComponent,\n  LibFormTextPasswordComponent,\n  LibFormToggleComponent,\n  LibFormToggleReversedComponent,\n];\n\n@NgModule({\n  imports: [...exportedModules],\n  exports: [...exported, ...exportedModules],\n  declarations: [...exported],\n  providers: []\n})\nexport class MatReduceFormsUsingMaterialModule {}\n","import { Tag } from '../material/Tag';\n\nexport interface Assignee {\n  selected_tag?: Tag;\n  selected_obj?: any;\n  assignee_id?: string;\n  type: AssigneeType;\n  name: string;\n  email: string;\n  mobile?: string;\n}\n\nexport enum AssigneeType {\n  contractor = 'Contractor',\n  staffMember = 'Staff Member',\n  myDetails = 'My Details',\n}\n\nexport interface User {\n  id?: string;\n  Email: string;\n  'First Name': string;\n  'Last Name': string;\n  Phone: string;\n}\n\nexport interface StaffMember {\n  id?: string;\n  name?: string;\n  email?: string;\n  phone?: string;\n}\n\nexport interface Contractor {\n  id?: string;\n  contactsArray?: Contact[];\n}\n\nexport interface Contact {\n  id: string;\n  name?: string;\n  email?: string;\n  phone?: string;\n}\n\nexport function blankContact(): Contact {\n  return {\n    id: '',\n    name: '',\n    email: '',\n    phone: '',\n  };\n}\n\n","import { Contractor, blankContact } from './form-assignee.models';\n\nexport function GetFirstContact(c: Contractor) {\n  if (!c) {\n    const blank = blankContact();\n    blank.name = 'NO CONTRACTOR FOUND';\n    return blank;\n  }\n  if (c.contactsArray && !!c.contactsArray.length) {\n    return c.contactsArray[0];\n  }\n  const blank = blankContact();\n  blank.name = 'NO CONTACT FOUND';\n  return blank;\n}\n","import { Component, Input, OnDestroy, OnInit, forwardRef } from '@angular/core';\r\nimport { FormControl, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\r\nimport { Subject, pipe } from 'rxjs';\r\nimport { FormBase } from '../form-base-class';\r\nimport { Tag } from '../material/Tag';\r\nimport { takeUntil, auditTime, tap } from 'rxjs/operators';\r\nimport {\r\n  FormControlTypeSafe,\r\n  FormBuilderTypedService\r\n} from '../../services/form-builder-typed.service';\r\nimport {\r\n  Assignee,\r\n  AssigneeType,\r\n  User,\r\n  StaffMember,\r\n  Contractor\r\n} from './form-assignee.models';\r\nimport { GetFirstContact } from './contact-helper';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'form-assignee-selector',\r\n  template: `\r\n    <mat-card>\r\n      <div class=\"import\">\r\n        <form-select-string\r\n          [formControl]=\"this.selectImportTypeControl\"\r\n          [selections]=\"this.assigneeTypes\"\r\n          placeholder=\"Assignee Type\"\r\n        >\r\n        </form-select-string>\r\n        <form-tag-single\r\n          placeholder=\"Select Contractor\"\r\n          [hidden]=\"this.hideSelectContractor\"\r\n          [formControl]=\"this.selectItemContractorControl\"\r\n          [choices]=\"contractorsList\"\r\n          [customValues]=\"false\"\r\n        >\r\n        </form-tag-single>\r\n\r\n        <form-tag-single\r\n          placeholder=\"Select Staff Member\"\r\n          [hidden]=\"this.hideSelectStaff\"\r\n          [formControl]=\"this.selectItemStaffControl\"\r\n          [choices]=\"staffList\"\r\n          [customValues]=\"false\"\r\n        >\r\n        </form-tag-single>\r\n      </div>\r\n      <div *ngIf=\"!(this.value && this.value.name)\">\r\n        Please select an assignee\r\n      </div>\r\n      <div *ngIf=\"this.value as selectedAssignee\">\r\n        <h3>Selected Assignee:</h3>\r\n        <div class=\"assignee\">\r\n          <p>\r\n            Name: <strong>{{ selectedAssignee.name }}</strong>\r\n          </p>\r\n          <p>\r\n            Email: <strong>{{ selectedAssignee.email }}</strong>\r\n          </p>\r\n          <p>\r\n            Phone: <strong>{{ selectedAssignee.mobile }}</strong>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </mat-card>\r\n  `,\r\n  styles: [\r\n    `\r\n      .import {\r\n        display: grid;\r\n        grid-template-columns: 100%;\r\n        grid-gap: 2%;\r\n        margin-bottom: 10px;\r\n      }\r\n      .assignee p {\r\n        margin: 0;\r\n      }\r\n      .assignee h3 {\r\n        margin: 0;\r\n      }\r\n    `\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => LibFormAssigneeSelectorComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => LibFormAssigneeSelectorComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class LibFormAssigneeSelectorComponent extends FormBase<Assignee>\r\n  implements OnInit, OnDestroy {\r\n  @Input()\r\n  currentUser: User;\r\n  @Input()\r\n  contractorsList: Tag[];\r\n  @Input()\r\n  staffList: Tag[];\r\n\r\n  selectImportTypeControl: FormControlTypeSafe<string>;\r\n  selectItemContractorControl: FormControlTypeSafe<Tag>;\r\n  selectItemStaffControl: FormControlTypeSafe<Tag>;\r\n\r\n  assigneeTypes: string[] = Object.keys(AssigneeType).map(k => AssigneeType[k]);\r\n\r\n  hideSelectContractor = true;\r\n  hideSelectStaff = true;\r\n\r\n  destroyed = new Subject();\r\n\r\n  constructor(private fb: FormBuilderTypedService) {\r\n    super();\r\n    this.selectImportTypeControl = this.fb.control<AssigneeType>();\r\n    this.selectItemContractorControl = this.fb.control<Tag>();\r\n    this.selectItemStaffControl = this.fb.control<Tag>();\r\n  }\r\n\r\n  makeLogPipe(logString: string) {\r\n    return pipe(\r\n      takeUntil(this.destroyed),\r\n      auditTime(300),\r\n      tap(val => console.log('assignee-selector: ', logString, { val }))\r\n    );\r\n  }\r\n\r\n  checkStatus(control: FormControl, disabled: boolean) {\r\n    if (disabled && !control.disabled) {\r\n      control.disable();\r\n    }\r\n    if (!disabled && control.disabled) {\r\n      control.enable();\r\n    }\r\n  }\r\n\r\n  async ngOnInit() {\r\n    // Check if main control has been disabled/enabled\r\n    this.internalControl.statusChanges\r\n      .pipe(this.makeLogPipe('control.statusChanges'))\r\n      .subscribe(newVal => {\r\n        const disabled = newVal === 'DISABLED';\r\n        this.checkStatus(this.selectImportTypeControl, disabled);\r\n        this.checkStatus(this.selectItemStaffControl, disabled);\r\n        this.checkStatus(this.selectItemContractorControl, disabled);\r\n      });\r\n    // Check if import type has changed\r\n    this.selectImportTypeControl.valueChanges\r\n      .pipe(this.makeLogPipe('selectImportTypeControl.valueChanges'))\r\n      .subscribe(val => {\r\n        if (val === AssigneeType.myDetails) {\r\n          return this.handleSelectedMyDetails();\r\n        }\r\n        if (val === AssigneeType.contractor) {\r\n          this.hideSelectContractor = false;\r\n          this.hideSelectStaff = true;\r\n        }\r\n        if (val === AssigneeType.staffMember) {\r\n          this.hideSelectStaff = false;\r\n          this.hideSelectContractor = true;\r\n        }\r\n      });\r\n    // Check if selectItemContractorControl has changed\r\n    this.selectItemContractorControl.valueChanges\r\n      .pipe(this.makeLogPipe('selectItemContractorControl.valueChanges'))\r\n      .subscribe(async (val: Tag) => {\r\n        return this.handleSelectedSingleContractor(val);\r\n      });\r\n    // Check if selectItemStaffControl has changed\r\n    this.selectItemStaffControl.valueChanges\r\n      .pipe(this.makeLogPipe('selectItemStaffControl.valueChanges'))\r\n      .subscribe(async (val: Tag) => {\r\n        return this.handleSelectedSingleStaff(val);\r\n      });\r\n    const currentValue = this.value;\r\n    if (currentValue) {\r\n      this.selectImportTypeControl.patchValue(currentValue.type);\r\n      if (currentValue.type === AssigneeType.contractor) {\r\n        this.selectItemContractorControl.patchValue(currentValue.selected_tag);\r\n      }\r\n      if (currentValue.type === AssigneeType.staffMember) {\r\n        this.selectItemStaffControl.patchValue(currentValue.selected_tag);\r\n      }\r\n    }\r\n  }\r\n\r\n  async ngOnDestroy() {\r\n    this.destroyed.next();\r\n  }\r\n\r\n  get selectedImportType() {\r\n    return this.selectImportTypeControl.value;\r\n  }\r\n\r\n  async handleSelectedSingleStaff(selected: Tag) {\r\n    if (!selected) {\r\n      console.warn('assignee-selector: no staff selected', { selected });\r\n      return;\r\n    }\r\n    const staffMember = selected.obj as StaffMember;\r\n    const newAssignee: Assignee = {\r\n      selected_tag: selected,\r\n      assignee_id: selected.id,\r\n      type: AssigneeType.staffMember,\r\n      name: staffMember.name,\r\n      email: staffMember.email,\r\n      mobile: staffMember.phone\r\n    };\r\n    console.log('assignee-selector: handleSelectedSingleStaff', {\r\n      selected,\r\n      newAssignee\r\n    });\r\n    this.value = newAssignee;\r\n  }\r\n\r\n  async handleSelectedSingleContractor(selected: Tag) {\r\n    if (!selected) {\r\n      console.warn('assignee-selector: no contractor selected', { selected });\r\n      return;\r\n    }\r\n    const contractor = selected.obj as Contractor;\r\n    const contact = GetFirstContact(contractor);\r\n    const newAssignee: Assignee = {\r\n      selected_tag: selected,\r\n      assignee_id: selected.id,\r\n      type: AssigneeType.contractor,\r\n      name: contact.name,\r\n      email: contact.email,\r\n      mobile: contact.phone\r\n    };\r\n    this.value = newAssignee;\r\n    console.log('assignee-selector: handleSelectedSingleContractor', {\r\n      this_value: this.value,\r\n      selected,\r\n      newAssignee\r\n    });\r\n  }\r\n\r\n  async handleSelectedMyDetails() {\r\n    this.hideSelectStaff = true;\r\n    this.hideSelectContractor = true;\r\n    const user = this.currentUser;\r\n    console.log(\r\n      'assignee-selector: handleSelectedMyDetails() importing my details',\r\n      {\r\n        user\r\n      }\r\n    );\r\n    const newAssignee: Assignee = {\r\n      selected_obj: user,\r\n      assignee_id: user.id,\r\n      type: AssigneeType.myDetails,\r\n      name: user['First Name'] + ' ' + user['Last Name'],\r\n      email: user.Email || '',\r\n      mobile: user.Phone || ''\r\n    };\r\n    this.value = newAssignee;\r\n    console.log('assignee-selector: handleSelectedMyDetails() newAssignee', {\r\n      newAssignee\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatCardModule, MatIconModule } from '@angular/material';\n\nimport { MatReduceFormsUsingMaterialModule } from '../material/forms-material.module';\nimport { LibFormAssigneeSelectorComponent } from './form-assignee-selector.component';\n\nconst exportedModules = [\n  CommonModule,\n  FormsModule,\n  ReactiveFormsModule,\n  MatIconModule,\n  MatCardModule,\n  MatReduceFormsUsingMaterialModule\n];\n\nconst exported = [LibFormAssigneeSelectorComponent];\n\n@NgModule({\n  imports: [...exportedModules],\n  exports: [...exported, ...exportedModules],\n  declarations: [...exported],\n  providers: []\n})\nexport class MatReduceFormsComposedModule {}\n","import { NgModule } from '@angular/core';\r\nimport {\r\n  AppConfirmationDialogComponent,\r\n  ConfirmationService\r\n} from './dialogs/app-confirmation.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { FormBuilderTypedService } from './services/form-builder-typed.service';\r\nimport { MatReduceFormsUsing3rdPartyModule } from './controls/using-3rd-party/forms-3rd-party.module';\r\nimport { MatReduceFormsUsingMaterialModule } from './controls/material/forms-material.module';\r\nimport { MatReduceFormsComposedModule } from './controls/composed/forms-composed.module';\r\nimport { MatIconModule } from '@angular/material';\r\n\r\nconst exportedModules = [\r\n  MatReduceFormsUsing3rdPartyModule,\r\n  MatReduceFormsUsingMaterialModule,\r\n  MatReduceFormsComposedModule,\r\n  CommonModule,\r\n  ReactiveFormsModule,\r\n  FormsModule\r\n];\r\n\r\n@NgModule({\r\n  entryComponents: [AppConfirmationDialogComponent],\r\n  declarations: [AppConfirmationDialogComponent],\r\n  exports: [...exportedModules],\r\n  imports: [MatIconModule, ...exportedModules],\r\n  providers: [ConfirmationService, FormBuilderTypedService]\r\n})\r\nexport class MatReduceModule {}\r\n","export interface Tag {\n  id: string;\n  name: string;\n  obj?: {};\n}\n","export interface TagObject {\n  id: string;\n  fileicon?: string;\n  imageurl?: string;\n  value: {\n    name: string;\n    props?: {\n      thumb?: string;\n      fileicon?: string;\n    };\n  };\n}\n\n"],"names":["Component","MatDialogRef","Inject","MAT_DIALOG_DATA","ViewChild","take","Injectable","MatDialog","tslib_1.__extends","FormControl","FormArray","FormGroup","FormBuilder","Subject","uuidv4","takeUntil","auditTime","Input","NG_VALUE_ACCESSOR","forwardRef","NG_VALIDATORS","uuidv1","debounceTime","htmlEditButton","ImageDrop","distinctUntilChanged","ViewEncapsulation","CommonModule","FormsModule","ReactiveFormsModule","MatInputModule","MatCardModule","MatIconModule","MatButtonModule","MatDatepickerModule","MatNativeDatetimeModule","MatDatetimepickerModule","NgModule","SignaturePadModule","ColorPickerModule","QuillModule","NgxMaterialTimepickerModule","tap","delay","compareObject","EventEmitter","ENTER","COMMA","startWith","map","tslib_1.__spread","MatSnackBar","Output","MatAutocompleteTrigger","exportedModules","MatSnackBarModule","MatSlideToggleModule","MatChipsModule","MatBadgeModule","MatDialogModule","MatAutocompleteModule","MatFormFieldModule","MatSelectModule","MatCheckboxModule","MatTooltipModule","MatProgressSpinnerModule","exported","pipe"],"mappings":"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"}